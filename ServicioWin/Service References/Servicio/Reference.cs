//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServicioWin.Servicio {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Servicio.IServicio")]
    public interface IServicio {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/BuscarDocumentacionActiva", ReplyAction="http://tempuri.org/IServicio/BuscarDocumentacionActivaResponse")]
        EntidadesCompartidas.Documentacion BuscarDocumentacionActiva(int codigo, EntidadesCompartidas.Empleado EmpleadoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/BuscarDocumentacionActiva", ReplyAction="http://tempuri.org/IServicio/BuscarDocumentacionActivaResponse")]
        System.Threading.Tasks.Task<EntidadesCompartidas.Documentacion> BuscarDocumentacionActivaAsync(int codigo, EntidadesCompartidas.Empleado EmpleadoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/AltaDocumentacion", ReplyAction="http://tempuri.org/IServicio/AltaDocumentacionResponse")]
        void AltaDocumentacion(EntidadesCompartidas.Documentacion oDocumentacion, EntidadesCompartidas.Empleado EmpleadoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/AltaDocumentacion", ReplyAction="http://tempuri.org/IServicio/AltaDocumentacionResponse")]
        System.Threading.Tasks.Task AltaDocumentacionAsync(EntidadesCompartidas.Documentacion oDocumentacion, EntidadesCompartidas.Empleado EmpleadoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/ModificarDocumentacion", ReplyAction="http://tempuri.org/IServicio/ModificarDocumentacionResponse")]
        void ModificarDocumentacion(EntidadesCompartidas.Documentacion oDocumentacion, EntidadesCompartidas.Empleado EmpleadoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/ModificarDocumentacion", ReplyAction="http://tempuri.org/IServicio/ModificarDocumentacionResponse")]
        System.Threading.Tasks.Task ModificarDocumentacionAsync(EntidadesCompartidas.Documentacion oDocumentacion, EntidadesCompartidas.Empleado EmpleadoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/BajaDocumentacion", ReplyAction="http://tempuri.org/IServicio/BajaDocumentacionResponse")]
        void BajaDocumentacion(EntidadesCompartidas.Documentacion oDocumentacion, EntidadesCompartidas.Empleado EmpleadoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/BajaDocumentacion", ReplyAction="http://tempuri.org/IServicio/BajaDocumentacionResponse")]
        System.Threading.Tasks.Task BajaDocumentacionAsync(EntidadesCompartidas.Documentacion oDocumentacion, EntidadesCompartidas.Empleado EmpleadoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/ListarDocumentacion", ReplyAction="http://tempuri.org/IServicio/ListarDocumentacionResponse")]
        EntidadesCompartidas.Documentacion[] ListarDocumentacion(EntidadesCompartidas.Empleado EmpleadoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/ListarDocumentacion", ReplyAction="http://tempuri.org/IServicio/ListarDocumentacionResponse")]
        System.Threading.Tasks.Task<EntidadesCompartidas.Documentacion[]> ListarDocumentacionAsync(EntidadesCompartidas.Empleado EmpleadoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/AltaHorasExtra", ReplyAction="http://tempuri.org/IServicio/AltaHorasExtraResponse")]
        void AltaHorasExtra(EntidadesCompartidas.HorasExtras oHorasExtra, EntidadesCompartidas.Empleado EmpleadoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/AltaHorasExtra", ReplyAction="http://tempuri.org/IServicio/AltaHorasExtraResponse")]
        System.Threading.Tasks.Task AltaHorasExtraAsync(EntidadesCompartidas.HorasExtras oHorasExtra, EntidadesCompartidas.Empleado EmpleadoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/AltaSolicitud", ReplyAction="http://tempuri.org/IServicio/AltaSolicitudResponse")]
        void AltaSolicitud(EntidadesCompartidas.Solicitud oSolicitud, EntidadesCompartidas.Solicitante SolicitanteActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/AltaSolicitud", ReplyAction="http://tempuri.org/IServicio/AltaSolicitudResponse")]
        System.Threading.Tasks.Task AltaSolicitudAsync(EntidadesCompartidas.Solicitud oSolicitud, EntidadesCompartidas.Solicitante SolicitanteActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/CambiarEstado", ReplyAction="http://tempuri.org/IServicio/CambiarEstadoResponse")]
        void CambiarEstado(EntidadesCompartidas.Solicitud oSolicitud, EntidadesCompartidas.Empleado EmpleadoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/CambiarEstado", ReplyAction="http://tempuri.org/IServicio/CambiarEstadoResponse")]
        System.Threading.Tasks.Task CambiarEstadoAsync(EntidadesCompartidas.Solicitud oSolicitud, EntidadesCompartidas.Empleado EmpleadoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/ListarSolicitudes", ReplyAction="http://tempuri.org/IServicio/ListarSolicitudesResponse")]
        EntidadesCompartidas.Solicitud[] ListarSolicitudes(EntidadesCompartidas.Empleado EmpleadoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/ListarSolicitudes", ReplyAction="http://tempuri.org/IServicio/ListarSolicitudesResponse")]
        System.Threading.Tasks.Task<EntidadesCompartidas.Solicitud[]> ListarSolicitudesAsync(EntidadesCompartidas.Empleado EmpleadoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/ListarSolicitudesAlta", ReplyAction="http://tempuri.org/IServicio/ListarSolicitudesAltaResponse")]
        EntidadesCompartidas.Solicitud[] ListarSolicitudesAlta(EntidadesCompartidas.Empleado EmpleadoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/ListarSolicitudesAlta", ReplyAction="http://tempuri.org/IServicio/ListarSolicitudesAltaResponse")]
        System.Threading.Tasks.Task<EntidadesCompartidas.Solicitud[]> ListarSolicitudesAltaAsync(EntidadesCompartidas.Empleado EmpleadoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/BuscarTiposdeTramiteActivo", ReplyAction="http://tempuri.org/IServicio/BuscarTiposdeTramiteActivoResponse")]
        EntidadesCompartidas.TiposdeTramite BuscarTiposdeTramiteActivo(string codigo, EntidadesCompartidas.Empleado EmpleadoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/BuscarTiposdeTramiteActivo", ReplyAction="http://tempuri.org/IServicio/BuscarTiposdeTramiteActivoResponse")]
        System.Threading.Tasks.Task<EntidadesCompartidas.TiposdeTramite> BuscarTiposdeTramiteActivoAsync(string codigo, EntidadesCompartidas.Empleado EmpleadoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/AltaTiposdeTramite", ReplyAction="http://tempuri.org/IServicio/AltaTiposdeTramiteResponse")]
        void AltaTiposdeTramite(EntidadesCompartidas.TiposdeTramite oTiposdeTramite, EntidadesCompartidas.Empleado EmpleadoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/AltaTiposdeTramite", ReplyAction="http://tempuri.org/IServicio/AltaTiposdeTramiteResponse")]
        System.Threading.Tasks.Task AltaTiposdeTramiteAsync(EntidadesCompartidas.TiposdeTramite oTiposdeTramite, EntidadesCompartidas.Empleado EmpleadoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/ModificarTiposdeTramite", ReplyAction="http://tempuri.org/IServicio/ModificarTiposdeTramiteResponse")]
        void ModificarTiposdeTramite(EntidadesCompartidas.TiposdeTramite oTiposdeTramite, EntidadesCompartidas.Empleado EmpleadoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/ModificarTiposdeTramite", ReplyAction="http://tempuri.org/IServicio/ModificarTiposdeTramiteResponse")]
        System.Threading.Tasks.Task ModificarTiposdeTramiteAsync(EntidadesCompartidas.TiposdeTramite oTiposdeTramite, EntidadesCompartidas.Empleado EmpleadoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/BajaTiposdeTramite", ReplyAction="http://tempuri.org/IServicio/BajaTiposdeTramiteResponse")]
        void BajaTiposdeTramite(EntidadesCompartidas.TiposdeTramite oTiposdeTramite, EntidadesCompartidas.Empleado EmpleadoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/BajaTiposdeTramite", ReplyAction="http://tempuri.org/IServicio/BajaTiposdeTramiteResponse")]
        System.Threading.Tasks.Task BajaTiposdeTramiteAsync(EntidadesCompartidas.TiposdeTramite oTiposdeTramite, EntidadesCompartidas.Empleado EmpleadoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/ListarTiposdeTramite", ReplyAction="http://tempuri.org/IServicio/ListarTiposdeTramiteResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EntidadesCompartidas.Empleado))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EntidadesCompartidas.Usuario))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EntidadesCompartidas.Solicitante))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EntidadesCompartidas.Documentacion))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EntidadesCompartidas.Documentacion[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EntidadesCompartidas.HorasExtras))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EntidadesCompartidas.Solicitud))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EntidadesCompartidas.TiposdeTramite))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EntidadesCompartidas.Solicitud[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        object[] ListarTiposdeTramite(EntidadesCompartidas.Empleado EmpleadoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/ListarTiposdeTramite", ReplyAction="http://tempuri.org/IServicio/ListarTiposdeTramiteResponse")]
        System.Threading.Tasks.Task<object[]> ListarTiposdeTramiteAsync(EntidadesCompartidas.Empleado EmpleadoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/BuscarUsuario", ReplyAction="http://tempuri.org/IServicio/BuscarUsuarioResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EntidadesCompartidas.Solicitante))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EntidadesCompartidas.Empleado))]
        EntidadesCompartidas.Usuario BuscarUsuario(int cedula, EntidadesCompartidas.Empleado EmpleadoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/BuscarUsuario", ReplyAction="http://tempuri.org/IServicio/BuscarUsuarioResponse")]
        System.Threading.Tasks.Task<EntidadesCompartidas.Usuario> BuscarUsuarioAsync(int cedula, EntidadesCompartidas.Empleado EmpleadoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/AltaUsuario", ReplyAction="http://tempuri.org/IServicio/AltaUsuarioResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EntidadesCompartidas.Solicitante))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EntidadesCompartidas.Empleado))]
        void AltaUsuario(EntidadesCompartidas.Usuario oUsuario, EntidadesCompartidas.Usuario UsuarioActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/AltaUsuario", ReplyAction="http://tempuri.org/IServicio/AltaUsuarioResponse")]
        System.Threading.Tasks.Task AltaUsuarioAsync(EntidadesCompartidas.Usuario oUsuario, EntidadesCompartidas.Usuario UsuarioActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/ModificarUsuario", ReplyAction="http://tempuri.org/IServicio/ModificarUsuarioResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EntidadesCompartidas.Solicitante))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EntidadesCompartidas.Empleado))]
        void ModificarUsuario(EntidadesCompartidas.Usuario oUsuario, EntidadesCompartidas.Empleado EmpleadoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/ModificarUsuario", ReplyAction="http://tempuri.org/IServicio/ModificarUsuarioResponse")]
        System.Threading.Tasks.Task ModificarUsuarioAsync(EntidadesCompartidas.Usuario oUsuario, EntidadesCompartidas.Empleado EmpleadoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/BajaUsuario", ReplyAction="http://tempuri.org/IServicio/BajaUsuarioResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EntidadesCompartidas.Solicitante))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EntidadesCompartidas.Empleado))]
        void BajaUsuario(EntidadesCompartidas.Usuario oUsuario, EntidadesCompartidas.Empleado EmpleadoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/BajaUsuario", ReplyAction="http://tempuri.org/IServicio/BajaUsuarioResponse")]
        System.Threading.Tasks.Task BajaUsuarioAsync(EntidadesCompartidas.Usuario oUsuario, EntidadesCompartidas.Empleado EmpleadoActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/LogueoUsuario", ReplyAction="http://tempuri.org/IServicio/LogueoUsuarioResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EntidadesCompartidas.Solicitante))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EntidadesCompartidas.Empleado))]
        EntidadesCompartidas.Usuario LogueoUsuario(string contra, int cedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/LogueoUsuario", ReplyAction="http://tempuri.org/IServicio/LogueoUsuarioResponse")]
        System.Threading.Tasks.Task<EntidadesCompartidas.Usuario> LogueoUsuarioAsync(string contra, int cedula);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioChannel : ServicioWin.Servicio.IServicio, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioClient : System.ServiceModel.ClientBase<ServicioWin.Servicio.IServicio>, ServicioWin.Servicio.IServicio {
        
        public ServicioClient() {
        }
        
        public ServicioClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicioClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public EntidadesCompartidas.Documentacion BuscarDocumentacionActiva(int codigo, EntidadesCompartidas.Empleado EmpleadoActual) {
            return base.Channel.BuscarDocumentacionActiva(codigo, EmpleadoActual);
        }
        
        public System.Threading.Tasks.Task<EntidadesCompartidas.Documentacion> BuscarDocumentacionActivaAsync(int codigo, EntidadesCompartidas.Empleado EmpleadoActual) {
            return base.Channel.BuscarDocumentacionActivaAsync(codigo, EmpleadoActual);
        }
        
        public void AltaDocumentacion(EntidadesCompartidas.Documentacion oDocumentacion, EntidadesCompartidas.Empleado EmpleadoActual) {
            base.Channel.AltaDocumentacion(oDocumentacion, EmpleadoActual);
        }
        
        public System.Threading.Tasks.Task AltaDocumentacionAsync(EntidadesCompartidas.Documentacion oDocumentacion, EntidadesCompartidas.Empleado EmpleadoActual) {
            return base.Channel.AltaDocumentacionAsync(oDocumentacion, EmpleadoActual);
        }
        
        public void ModificarDocumentacion(EntidadesCompartidas.Documentacion oDocumentacion, EntidadesCompartidas.Empleado EmpleadoActual) {
            base.Channel.ModificarDocumentacion(oDocumentacion, EmpleadoActual);
        }
        
        public System.Threading.Tasks.Task ModificarDocumentacionAsync(EntidadesCompartidas.Documentacion oDocumentacion, EntidadesCompartidas.Empleado EmpleadoActual) {
            return base.Channel.ModificarDocumentacionAsync(oDocumentacion, EmpleadoActual);
        }
        
        public void BajaDocumentacion(EntidadesCompartidas.Documentacion oDocumentacion, EntidadesCompartidas.Empleado EmpleadoActual) {
            base.Channel.BajaDocumentacion(oDocumentacion, EmpleadoActual);
        }
        
        public System.Threading.Tasks.Task BajaDocumentacionAsync(EntidadesCompartidas.Documentacion oDocumentacion, EntidadesCompartidas.Empleado EmpleadoActual) {
            return base.Channel.BajaDocumentacionAsync(oDocumentacion, EmpleadoActual);
        }
        
        public EntidadesCompartidas.Documentacion[] ListarDocumentacion(EntidadesCompartidas.Empleado EmpleadoActual) {
            return base.Channel.ListarDocumentacion(EmpleadoActual);
        }
        
        public System.Threading.Tasks.Task<EntidadesCompartidas.Documentacion[]> ListarDocumentacionAsync(EntidadesCompartidas.Empleado EmpleadoActual) {
            return base.Channel.ListarDocumentacionAsync(EmpleadoActual);
        }
        
        public void AltaHorasExtra(EntidadesCompartidas.HorasExtras oHorasExtra, EntidadesCompartidas.Empleado EmpleadoActual) {
            base.Channel.AltaHorasExtra(oHorasExtra, EmpleadoActual);
        }
        
        public System.Threading.Tasks.Task AltaHorasExtraAsync(EntidadesCompartidas.HorasExtras oHorasExtra, EntidadesCompartidas.Empleado EmpleadoActual) {
            return base.Channel.AltaHorasExtraAsync(oHorasExtra, EmpleadoActual);
        }
        
        public void AltaSolicitud(EntidadesCompartidas.Solicitud oSolicitud, EntidadesCompartidas.Solicitante SolicitanteActual) {
            base.Channel.AltaSolicitud(oSolicitud, SolicitanteActual);
        }
        
        public System.Threading.Tasks.Task AltaSolicitudAsync(EntidadesCompartidas.Solicitud oSolicitud, EntidadesCompartidas.Solicitante SolicitanteActual) {
            return base.Channel.AltaSolicitudAsync(oSolicitud, SolicitanteActual);
        }
        
        public void CambiarEstado(EntidadesCompartidas.Solicitud oSolicitud, EntidadesCompartidas.Empleado EmpleadoActual) {
            base.Channel.CambiarEstado(oSolicitud, EmpleadoActual);
        }
        
        public System.Threading.Tasks.Task CambiarEstadoAsync(EntidadesCompartidas.Solicitud oSolicitud, EntidadesCompartidas.Empleado EmpleadoActual) {
            return base.Channel.CambiarEstadoAsync(oSolicitud, EmpleadoActual);
        }
        
        public EntidadesCompartidas.Solicitud[] ListarSolicitudes(EntidadesCompartidas.Empleado EmpleadoActual) {
            return base.Channel.ListarSolicitudes(EmpleadoActual);
        }
        
        public System.Threading.Tasks.Task<EntidadesCompartidas.Solicitud[]> ListarSolicitudesAsync(EntidadesCompartidas.Empleado EmpleadoActual) {
            return base.Channel.ListarSolicitudesAsync(EmpleadoActual);
        }
        
        public EntidadesCompartidas.Solicitud[] ListarSolicitudesAlta(EntidadesCompartidas.Empleado EmpleadoActual) {
            return base.Channel.ListarSolicitudesAlta(EmpleadoActual);
        }
        
        public System.Threading.Tasks.Task<EntidadesCompartidas.Solicitud[]> ListarSolicitudesAltaAsync(EntidadesCompartidas.Empleado EmpleadoActual) {
            return base.Channel.ListarSolicitudesAltaAsync(EmpleadoActual);
        }
        
        public EntidadesCompartidas.TiposdeTramite BuscarTiposdeTramiteActivo(string codigo, EntidadesCompartidas.Empleado EmpleadoActual) {
            return base.Channel.BuscarTiposdeTramiteActivo(codigo, EmpleadoActual);
        }
        
        public System.Threading.Tasks.Task<EntidadesCompartidas.TiposdeTramite> BuscarTiposdeTramiteActivoAsync(string codigo, EntidadesCompartidas.Empleado EmpleadoActual) {
            return base.Channel.BuscarTiposdeTramiteActivoAsync(codigo, EmpleadoActual);
        }
        
        public void AltaTiposdeTramite(EntidadesCompartidas.TiposdeTramite oTiposdeTramite, EntidadesCompartidas.Empleado EmpleadoActual) {
            base.Channel.AltaTiposdeTramite(oTiposdeTramite, EmpleadoActual);
        }
        
        public System.Threading.Tasks.Task AltaTiposdeTramiteAsync(EntidadesCompartidas.TiposdeTramite oTiposdeTramite, EntidadesCompartidas.Empleado EmpleadoActual) {
            return base.Channel.AltaTiposdeTramiteAsync(oTiposdeTramite, EmpleadoActual);
        }
        
        public void ModificarTiposdeTramite(EntidadesCompartidas.TiposdeTramite oTiposdeTramite, EntidadesCompartidas.Empleado EmpleadoActual) {
            base.Channel.ModificarTiposdeTramite(oTiposdeTramite, EmpleadoActual);
        }
        
        public System.Threading.Tasks.Task ModificarTiposdeTramiteAsync(EntidadesCompartidas.TiposdeTramite oTiposdeTramite, EntidadesCompartidas.Empleado EmpleadoActual) {
            return base.Channel.ModificarTiposdeTramiteAsync(oTiposdeTramite, EmpleadoActual);
        }
        
        public void BajaTiposdeTramite(EntidadesCompartidas.TiposdeTramite oTiposdeTramite, EntidadesCompartidas.Empleado EmpleadoActual) {
            base.Channel.BajaTiposdeTramite(oTiposdeTramite, EmpleadoActual);
        }
        
        public System.Threading.Tasks.Task BajaTiposdeTramiteAsync(EntidadesCompartidas.TiposdeTramite oTiposdeTramite, EntidadesCompartidas.Empleado EmpleadoActual) {
            return base.Channel.BajaTiposdeTramiteAsync(oTiposdeTramite, EmpleadoActual);
        }
        
        public object[] ListarTiposdeTramite(EntidadesCompartidas.Empleado EmpleadoActual) {
            return base.Channel.ListarTiposdeTramite(EmpleadoActual);
        }
        
        public System.Threading.Tasks.Task<object[]> ListarTiposdeTramiteAsync(EntidadesCompartidas.Empleado EmpleadoActual) {
            return base.Channel.ListarTiposdeTramiteAsync(EmpleadoActual);
        }
        
        public EntidadesCompartidas.Usuario BuscarUsuario(int cedula, EntidadesCompartidas.Empleado EmpleadoActual) {
            return base.Channel.BuscarUsuario(cedula, EmpleadoActual);
        }
        
        public System.Threading.Tasks.Task<EntidadesCompartidas.Usuario> BuscarUsuarioAsync(int cedula, EntidadesCompartidas.Empleado EmpleadoActual) {
            return base.Channel.BuscarUsuarioAsync(cedula, EmpleadoActual);
        }
        
        public void AltaUsuario(EntidadesCompartidas.Usuario oUsuario, EntidadesCompartidas.Usuario UsuarioActual) {
            base.Channel.AltaUsuario(oUsuario, UsuarioActual);
        }
        
        public System.Threading.Tasks.Task AltaUsuarioAsync(EntidadesCompartidas.Usuario oUsuario, EntidadesCompartidas.Usuario UsuarioActual) {
            return base.Channel.AltaUsuarioAsync(oUsuario, UsuarioActual);
        }
        
        public void ModificarUsuario(EntidadesCompartidas.Usuario oUsuario, EntidadesCompartidas.Empleado EmpleadoActual) {
            base.Channel.ModificarUsuario(oUsuario, EmpleadoActual);
        }
        
        public System.Threading.Tasks.Task ModificarUsuarioAsync(EntidadesCompartidas.Usuario oUsuario, EntidadesCompartidas.Empleado EmpleadoActual) {
            return base.Channel.ModificarUsuarioAsync(oUsuario, EmpleadoActual);
        }
        
        public void BajaUsuario(EntidadesCompartidas.Usuario oUsuario, EntidadesCompartidas.Empleado EmpleadoActual) {
            base.Channel.BajaUsuario(oUsuario, EmpleadoActual);
        }
        
        public System.Threading.Tasks.Task BajaUsuarioAsync(EntidadesCompartidas.Usuario oUsuario, EntidadesCompartidas.Empleado EmpleadoActual) {
            return base.Channel.BajaUsuarioAsync(oUsuario, EmpleadoActual);
        }
        
        public EntidadesCompartidas.Usuario LogueoUsuario(string contra, int cedula) {
            return base.Channel.LogueoUsuario(contra, cedula);
        }
        
        public System.Threading.Tasks.Task<EntidadesCompartidas.Usuario> LogueoUsuarioAsync(string contra, int cedula) {
            return base.Channel.LogueoUsuarioAsync(contra, cedula);
        }
    }
}
